# Automated Cropping

%% Automated cropping using edge detection, dilation, filling and boundary box for detection
% savePath2;

clc;
clear all;
close all;

imagePath='C:/Users/gurpu/Desktop/Capstone/dataset ct/Normal-1/Normal/1700/953/binarized';
path=imagePath;
savedPathCropped = 'C:/Users/gurpu/Desktop/Capstone/dataset ct/input test/Normal/1700';
mkdir(savedPathCropped)

a = dir(fullfile(path, '*.tif'));
N = numel(a);

for i=1:N
    imgname = '1 (';
    num = int2str(i);
    suffix=').tif';

    % imgpath =append(path,imgname,num,suffix);

    s = '/';
    % suffix = '.tif';

    imagepath = append(path,s,imgname,num,suffix);

    originalImage = imread(imagepath); %Read the image
    
    % grayImage = im2gray(originalImage); % Convert the image to grayscale 
    grayImage=originalImage;

    smoothedImage = grayImage;
    smoothedImage=double(smoothedImage);
    smoothedImage=imgaussfilt(smoothedImage,7);

    edgeImage = edge(smoothedImage, 'sobel'); % Use edge detection (Canny) to find the edges of the lung region
    
    se = strel('cuboid', [100 100 100]); % Dilate the edges to connect nearby regions
    % dilatedImage = imdilate(edgeImage, se);
    
    % imshow(dilatedImage);
    % filledImage = imfill(dilatedImage,'holes'); % Fill the holes in the lung region
    filledImage=imclose(edgeImage, se);
 
    % imshow(filledImage);

    cc = bwconncomp(filledImage); % Find connected components (regions) in the binary image
    
    % Find the largest connected component (assuming it's the lung region)
    numPixels = cellfun(@numel, cc.PixelIdxList);
    [~, idx] = max(numPixels);
    largestComponent = false(size(filledImage));
    largestComponent(cc.PixelIdxList{idx}) = true;
  
     imshow(largestComponent);
    % Crop the original image using the bounding box of the lung region
    props = regionprops(largestComponent, 'BoundingBox');
    boundingBox = props.BoundingBox;
    croppedImage = imcrop(originalImage, boundingBox);

    [m n] = size(croppedImage);
    
    [rows, cols, ~] = size(originalImage);
    
    cropImg = imresize(croppedImage, [310 420]);

    save_path = append(savedPathCropped,s,imgname,num,suffix);
    imwrite(cropImg, save_path); % Saving the image
end
