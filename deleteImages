% Delete unwanted images


% Select images using ROI

a = dir(fullfile(imagePath, '*.png'));
N = numel(a);

% Create directory 'selected_TIF'
if ~exist('C:/Users/gurpu/Desktop/Capstone/dataset ct/Normal-1/Normal/1700/953/selected images', 'dir')
    mkdir('C:/Users/gurpu/Desktop/Capstone/dataset ct/Normal-1/Normal/1700/953/selected images');
end
adds = containers.Map;

% Walk through the directory structure
files = dir(fullfile(imagePath, '**', '*.png')); % retrives a list of all .tif files in the folder
for i = 1:length(files) 
    file = files(i);
    full_add = fullfile(file.folder, file.name);
    indexes = find_inds(filesep, full_add); % constructs the path of the file
    index = indexes(end); % finds the last occurance of the file seperator
    key = full_add(1:index); % extracts the key

    if ~isKey(adds, key) % adds key to map, if it doesnt exist
        adds(key) = {};
    end
    adds(key) = [adds(key), {full_add(index+1:end)}]; % appends the file name to the list in the map
end

selected = containers.Map;
for key = keys(adds)
    key = key{1};
    zero = [];
    names = [];
    for value = adds(key)
        value = value{1};
        names = [names, {value}];
        address = fullfile(key, value);
        pixel = imread(address, 'png');
        % sp = pixel(241:340, 121:370);
        sp = pixel(141:370, 80:430);
        counted_zero = sum(sp(:) < 90); % counts the number of pixels with <300 intensity in 'sp' specifically
        zero = [zero, counted_zero];
       
    end
    min_zero = min(zero);
    max_zero = max(zero);
    threshold = (max_zero - min_zero) / 1.5; % calcs the threshold val using min and max counts of low int. pixels
    indices = find(zero > threshold);
    selected_names = names(indices); 
    selected(key) = selected_names; % stores the selected items in the 'selected' variable
end

for key = keys(selected)
    key = key{1};
    indexes = find_inds(filesep, key);
    for i = 1:4
        eval(sprintf('index%d = indexes(i);', i));
    end
  
    for value = selected(key)
        value = value{1};
        address = fullfile(key, value);
        [~, relative_path, ~] = fileparts(address);
        new_address = fullfile('C:/Users/gurpu/Desktop/Capstone/dataset ct/Normal-1/Normal/1700/953/selected images', relative_path);
        suffix = '.tif';
        new_address = append(new_address,suffix);
        copyfile(address, new_address); % copies the images and pastes it in a new address
        address;
    end
end

saved_path='C:/Users/gurpu/Desktop/Capstone/dataset ct/Normal-1/Normal/1700/953/selected images';
for i=0:9
    imgname1='000';
    num=int2str(i);
    slash='/';
    suffix='.tif';
    imgname=append(saved_path,slash,imgname1,num,suffix);
    delete(imgname);
end

% Specify the folder containing your images
folderPath = append(imagePath,'/selected images');

% Get a list of all image files in the folder
imageFiles = dir(fullfile(folderPath, '*tif'));

% Loop through each image and rename them
for i = 1:length(imageFiles)
    % Construct the new filename based on the count
    newFilename = sprintf('1 (%d).tif', i);

    % Build the full path for the old and new filenames
    oldFilePath = fullfile(folderPath, imageFiles(i).name);
    newFilePath = fullfile(folderPath, newFilename);

    % Rename the file
    movefile(oldFilePath, newFilePath);

end

function indexes = find_inds(ch, st)
    indexes = [];
    num = 0;
    while true
        index0 = strfind(st(num+1:end), ch);
        if ~isempty(index0)
            indexes = [indexes, index0(1) + num];
            num = num + index0(1);
        else
            break;
        end
    end
end
